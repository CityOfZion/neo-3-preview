{"version":3,"sources":["logo.svg","actions/blockActions.js","reducers/blockReducer.js","reducers/rootReducer.js","store.js","components/footer/Footer.js","components/navigation/Navigation.js","components/list/List.js","components/button/Button.js","components/card/Card.js","containers/LandingPage.js","containers/Transactions.js","containers/Blocks.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","requestBlock","blockHeight","dispatch","type","requestBlocks","page","requestBlockSuccess","json","receivedAt","Date","now","requestBlocksSuccess","requestBlockError","error","shouldFetchBlock","state","index","blocks","cached","isLoading","combineReducers","list","action","Object","assign","block","lastUpdated","INITIAL_STATE","items","loggerMiddleware","createLogger","className","activeStyle","fontWeight","id","to","src","logo","alt","List","columns","data","handleRowClick","sortedByAccessor","map","sorted","forEach","column","accessor","gridstyle","gridTemplateColumns","length","style","key","name","values","detail","onClick","uniqueId","children","value","massageBlockData","time","moment","format","color","toLocaleString","size","connect","filteredBlocks","slice","fetchBlocks","console","log","getState","a","generateApiUrl","fetch","response","useEffect","class","row","fetchBlock","props","path","Transactions","Blocks","Footer","Boolean","window","location","hostname","match","ReactDOM","render","store","initialState","createStore","rootReducer","applyMiddleware","thunk","configureStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4b9fa12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","export const REQUEST_BLOCK = 'REQUEST_BLOCK'\nexport const requestBlock = blockHeight => dispatch => {\n  dispatch({\n    type: REQUEST_BLOCK,\n    blockHeight,\n  })\n}\n\nexport const REQUEST_BLOCKS = 'REQUEST_BLOCKS'\nexport const requestBlocks = page => dispatch => {\n  dispatch({\n    type: REQUEST_BLOCKS,\n    page,\n  })\n}\n\nexport const REQUEST_BLOCK_SUCCESS = 'REQUEST_BLOCK_SUCCESS'\nexport const requestBlockSuccess = (blockHeight, json) => dispatch => {\n  dispatch({\n    type: REQUEST_BLOCK_SUCCESS,\n    blockHeight,\n    json,\n    receivedAt: Date.now(),\n  })\n}\n\nexport const REQUEST_BLOCKS_SUCCESS = 'REQUEST_BLOCKS_SUCCESS'\nexport const requestBlocksSuccess = (page, json) => dispatch => {\n  dispatch({\n    type: REQUEST_BLOCKS_SUCCESS,\n    page,\n    json,\n    receivedAt: Date.now(),\n  })\n}\n\nexport const REQUEST_BLOCK_ERROR = 'REQUEST_BLOCK_ERROR'\nexport const requestBlockError = (blockHeight, error) => dispatch => {\n  dispatch({\n    type: REQUEST_BLOCK_ERROR,\n    blockHeight,\n    error,\n    receivedAt: Date.now(),\n  })\n}\n\nexport const REQUEST_BLOCKS_ERROR = 'REQUEST_BLOCKS_ERROR'\nexport const requestBlocksError = (page, error) => dispatch => {\n  dispatch({\n    type: REQUEST_BLOCKS_ERROR,\n    page,\n    error,\n    receivedAt: Date.now(),\n  })\n}\n\nexport function shouldFetchBlock(state, index) {\n  const block = state.blocks.cached[index]\n  if (!block) {\n    return true\n  } else if (state.blocks.isLoading) {\n    return false\n  }\n  return false\n}\n\nexport function fetchBlock(index = 1) {\n  console.log('fetching block')\n  return async (dispatch, getState) => {\n    console.log(dispatch, getState)\n    if (shouldFetchBlock(getState(), index)) {\n      try {\n        dispatch(requestBlock(index))\n\n        const generateApiUrl = index =>\n          `https://ja3l09yg7a.execute-api.us-east-1.amazonaws.com/dev/api/test_net/v1/get_block/${index}`\n\n        const response = await fetch(generateApiUrl(index))\n        const json = await response.json()\n        dispatch(requestBlockSuccess(index, json))\n      } catch (e) {\n        dispatch(requestBlockError(index, e))\n      }\n    }\n  }\n}\n\nexport function fetchBlocks(page = 1) {\n  console.log('fetching blocks')\n  return async (dispatch, getState) => {\n    try {\n      dispatch(requestBlocks(page))\n\n      const generateApiUrl = page =>\n        `https://ja3l09yg7a.execute-api.us-east-1.amazonaws.com/dev/api/test_net/v1/get_blocks/${page}`\n\n      const response = await fetch(generateApiUrl(page))\n      const json = await response.json()\n      console.log({ json })\n      dispatch(requestBlocksSuccess(page, json))\n    } catch (e) {\n      dispatch(requestBlockError(page, e))\n    }\n  }\n}\n","import {\n  REQUEST_BLOCK,\n  REQUEST_BLOCK_SUCCESS,\n  REQUEST_BLOCKS,\n  REQUEST_BLOCKS_SUCCESS,\n} from '../actions/blockActions'\n\nexport default (\n  state = {\n    isLoading: false,\n    cached: {},\n    list: [],\n  },\n  action,\n) => {\n  switch (action.type) {\n    case REQUEST_BLOCK:\n      return Object.assign({}, state, {\n        isLoading: true,\n      })\n    case REQUEST_BLOCK_SUCCESS:\n      return Object.assign({}, state, {\n        isLoading: false,\n        block: action.json,\n        lastUpdated: action.receivedAt,\n        cached: {\n          [action.blockHeight]: action.json,\n        },\n      })\n    case REQUEST_BLOCKS:\n      return Object.assign({}, state, {\n        isLoading: true,\n      })\n    case REQUEST_BLOCKS_SUCCESS:\n      return Object.assign({}, state, {\n        isLoading: false,\n        list: action.json,\n        lastUpdated: action.receivedAt,\n      })\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport blockReducer from './blockReducer'\n\nexport default combineReducers({\n  blocks: blockReducer,\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from './reducers/rootReducer'\n\nconst INITIAL_STATE = {\n  blocks: {\n    isLoading: false,\n    items: [],\n    cached: {},\n  },\n  // transactions: {\n  //   isLoading: false,\n  //   isStaleData: false,\n  //   items: [],\n  //   selected: {},\n  //   currentPage: 0,\n  // },\n}\n\nconst loggerMiddleware = createLogger()\n\nexport default function configureStore(initialState = INITIAL_STATE) {\n  return createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunk, loggerMiddleware),\n  )\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <footer className=\"footer\">\n      <p>Some footer nonsense!</p>\n    </footer>\n  )\n}\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport logo from '../../logo.svg'\n\nimport './Navigation.css'\n\nconst activeStyle = {\n  fontWeight: 'bold',\n}\n\nexport default () => {\n  return (\n    <nav id=\"desktop_navigation\">\n      <div id=\"desktop_logo\">\n        <Link to=\"/\">\n          <img src={logo} alt=\"logo\" />\n        </Link>\n      </div>\n      <div id=\"desktop_navigation_options\">\n        <NavLink activeStyle={activeStyle} to=\"/transactions\">\n          Transactions\n        </NavLink>\n\n        <NavLink activeStyle={activeStyle} to=\"/blocks\">\n          Blocks\n        </NavLink>\n\n        <NavLink activeStyle={activeStyle} to=\"/contracts\">\n          Contracts\n        </NavLink>\n      </div>\n    </nav>\n  )\n}\n","import React from 'react'\nimport { uniqueId } from 'lodash-es'\n\nimport './List.css'\n\nexport const List = ({ columns, data, handleRowClick }) => {\n  const sortedByAccessor = data.map(data => {\n    const sorted = {}\n    columns.forEach(column => {\n      sorted[column.accessor] = data[column.accessor]\n    })\n    return sorted\n  })\n\n  const gridstyle = {\n    gridTemplateColumns: `repeat(${columns.length}, 1fr)`,\n  }\n\n  return (\n    <div className=\"data-list-container\">\n      <div className=\"data-list\" style={gridstyle}>\n        {columns.map(column => (\n          <div className=\"data-list-column\" key={column.name}>\n            {column.name}\n          </div>\n        ))}\n\n        {sortedByAccessor.map(data =>\n          Object.values(data).map(detail => (\n            <span onClick={() => handleRowClick(data)} key={uniqueId()}>\n              {typeof detail === 'function' ? detail() : detail}\n            </span>\n          )),\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default List\n","import React from 'react'\n\nimport './Button.css'\n\nexport default ({ children }) => {\n  return <button className=\"primary-button\">{children}</button>\n}\n","import React from 'react'\n\nimport './Card.css'\n\nexport default ({ value, detail }) => {\n  return (\n    <div className=\"card\">\n      <h2>{value}</h2>\n      <p>{detail}</p>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { fetchBlocks } from '../actions/blockActions'\nimport List from '../components/list/List'\nimport Button from '../components/button/Button'\nimport Card from '../components/card/Card'\n\nimport './LandingPage.css'\nimport moment from 'moment'\n\nconst massageBlockData = block => {\n  return {\n    ...block,\n    time: moment(block.time).format('MM-DD-YYYY | MM:HH:SS'),\n    index: () => (\n      <div style={{ color: 'var(--green)' }}>\n        {block.index.toLocaleString()}\n      </div>\n    ),\n    size: `${block.size} bytes`,\n  }\n}\n\nconst mapStateToProps = ({ blocks }) => ({\n  filteredBlocks:\n    (blocks.list &&\n      blocks.list.length &&\n      blocks.list.slice(0, 5).map(massageBlockData)) ||\n    [],\n  isLoading: blocks.isLoading,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchBlocks: index => dispatch(fetchBlocks()),\n})\n\nconst LandingPage = ({ fetchBlocks, filteredBlocks }) => {\n  useEffect(() => {\n    fetchBlocks()\n  }, [])\n\n  const columns = [\n    { name: 'Height', accessor: 'index' },\n    { name: 'Size', accessor: 'size' },\n    { name: 'Hash', accessor: 'hash' },\n    { name: 'Created On', accessor: 'time' },\n  ]\n\n  return (\n    <div id=\"landing-page\">\n      <div id=\"call-to-action\">\n        <h1>NEO3 Download</h1>\n        <div id=\"call-to-action-content\">\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat.\n          </p>\n          <div id=\"call-to-action-button-container\">\n            <Button>Download NEO CLI</Button>\n          </div>\n        </div>\n      </div>\n\n      <h1> Statistics</h1>\n      <div id=\"statistics-card-container\">\n        <Card value=\"25,036,425\" detail=\"Total Transactions\" />\n        <Card value=\"25,036,425\" detail=\"Total Transactions\" />\n\n        <Card value=\"25,036,425\" detail=\"Total Transactions\" />\n        <Card value=\"25,036,425\" detail=\"Total Transactions\" />\n      </div>\n\n      <div class=\"header-and-link\">\n        <h1> Last 5 Blocks</h1>\n        <a> View all blocks</a>\n      </div>\n\n      <List\n        handleRowClick={row => console.log(row)}\n        columns={columns}\n        data={filteredBlocks}\n      ></List>\n\n      <h1> NEO3 Features</h1>\n\n      <h1> Recent Articles</h1>\n    </div>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LandingPage)\n","import React from 'react'\n\nexport default () => <div> hello NEO 3! (transactions)</div>\n","import React from 'react'\n\nexport default () => <div> hello NEO 3! (blocks)</div>\n","import React, { Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport Footer from './components/footer/Footer'\nimport Navigation from './components/navigation/Navigation'\nimport { fetchBlock } from './actions/blockActions'\nimport LandingPage from './containers/LandingPage'\nimport Transactions from './containers/Transactions'\nimport Blocks from './containers/Blocks'\nimport './App.css'\n\nconst mapStateToProps = state => ({\n  ...state,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchBlock: index => dispatch(fetchBlock(index)),\n})\n\nfunction App(props) {\n  return (\n    <Fragment>\n      <div className=\"content\">\n        <Router>\n          <Navigation />\n\n          <div className=\"router-content\">\n            <Switch>\n              <Route path=\"/transactions\">\n                <Transactions />\n              </Route>\n              <Route path=\"/blocks\">\n                <Blocks />\n              </Route>\n              <Route path=\"/\">\n                <LandingPage />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n      <Footer />\n    </Fragment>\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport configureStore from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}